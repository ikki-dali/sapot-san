require('dotenv').config();
const fs = require('fs');
const path = require('path');
const { supabase } = require('./src/db/connection');

async function runMigration() {
  console.log('üîß „Çø„Ç∞„ÉÜ„Éº„Éñ„É´„ÅÆ„Éû„Ç§„Ç∞„É¨„Éº„Ç∑„Éß„É≥ÈñãÂßã...\n');

  try {
    // SQL„Éï„Ç°„Ç§„É´„ÇíË™≠„ÅøËæº„Åø
    const sqlPath = path.join(__dirname, 'migrations', '003_create_tags_tables.sql');
    const sql = fs.readFileSync(sqlPath, 'utf8');

    // SQLÊñá„ÇíÂàÜÂâ≤„Åó„Å¶ÂÆüË°å
    const statements = sql
      .split(';')
      .map(s => s.trim())
      .filter(s => s.length > 0 && !s.startsWith('--'));

    for (const statement of statements) {
      console.log('ÂÆüË°å‰∏≠:', statement.substring(0, 50) + '...');

      const { error } = await supabase.rpc('exec_sql', {
        query: statement
      });

      if (error) {
        // RPC„Åå‰Ωø„Åà„Å™„ÅÑÂ†¥Âêà„ÅØÁõ¥Êé•ÂÆüË°å„ÇíË©¶„Åô
        console.log('‚ö†Ô∏è RPCÂ§±Êïó„ÄÅÁõ¥Êé•ÂÆüË°å„ÇíË©¶„Åø„Åæ„Åô...');

        // Postgres„ÅÆ„ÇØ„É©„Ç§„Ç¢„É≥„Éà„É©„Ç§„Éñ„É©„É™„Åå„ÅÇ„Çå„Å∞‰ΩøÁî®
        const { createClient } = require('@supabase/supabase-js');
        const adminClient = createClient(
          process.env.SUPABASE_URL,
          process.env.SUPABASE_SERVICE_ROLE_KEY || process.env.SUPABASE_ANON_KEY
        );

        const { error: directError } = await adminClient.rpc('exec_sql', {
          query: statement
        });

        if (directError) {
          console.error('‚ùå „Ç®„É©„Éº:', directError.message);
        } else {
          console.log('‚úÖ ÊàêÂäü');
        }
      } else {
        console.log('‚úÖ ÊàêÂäü');
      }
    }

    console.log('\nüéâ „Éû„Ç§„Ç∞„É¨„Éº„Ç∑„Éß„É≥ÂÆå‰∫ÜÔºÅ');

    // „Çø„Ç∞‰∏ÄË¶ß„ÇíÁ¢∫Ë™ç
    const { data: tags, error: selectError } = await supabase
      .from('tags')
      .select('*');

    if (selectError) {
      console.error('„Çø„Ç∞‰∏ÄË¶ßÂèñÂæó„Ç®„É©„Éº:', selectError);
    } else {
      console.log('\nüìã ÁôªÈå≤„Åï„Çå„Åü„Çø„Ç∞:');
      tags.forEach(tag => {
        console.log(`  - ${tag.name} (${tag.color})`);
      });
    }

    process.exit(0);
  } catch (error) {
    console.error('‚ùå „Éû„Ç§„Ç∞„É¨„Éº„Ç∑„Éß„É≥„Ç®„É©„Éº:', error);
    process.exit(1);
  }
}

runMigration();
